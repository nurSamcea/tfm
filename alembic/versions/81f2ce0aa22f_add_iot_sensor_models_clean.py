"""Add IoT sensor models clean

Revision ID: 81f2ce0aa22f
Revises: 09e52dc1068b
Create Date: 2025-09-07 16:23:54.531464

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '81f2ce0aa22f'
down_revision: Union[str, None] = '09e52dc1068b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Las tablas 'sensor_zones', 'sensors' y 'sensor_alerts' ya existen en el entorno actual.
    # Esta migración solo debe ajustar la tabla 'sensor_readings'.
    # Añadir como nullable para no romper filas antiguas; luego se puede backfillear y poner NOT NULL
    op.add_column('sensor_readings', sa.Column('sensor_id', sa.Integer(), nullable=True))
    op.add_column('sensor_readings', sa.Column('soil_moisture', sa.Float(), nullable=True))
    op.add_column('sensor_readings', sa.Column('ph_level', sa.Float(), nullable=True))
    op.add_column('sensor_readings', sa.Column('reading_quality', sa.Float(), nullable=True))
    op.add_column('sensor_readings', sa.Column('is_processed', sa.Boolean(), nullable=True))
    op.add_column('sensor_readings', sa.Column('extra_data', sa.JSON(), nullable=True))
    op.create_foreign_key(None, 'sensor_readings', 'sensors', ['sensor_id'], ['id'])
    op.drop_column('sensor_readings', 'sensor_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sensor_readings', sa.Column('sensor_type', postgresql.ENUM('temperature', 'humidity', 'gas', 'light', 'shock', 'gps', 'soil_moisture', 'pressure', 'ph', 'co2', 'noise', 'vibration', 'light_intensity', 'air_quality', 'motion', 'proximity', 'weight', 'flow', 'level', 'speed', 'direction', 'altitude', 'battery', 'signal_strength', 'other', name='sensortypeenum'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'sensor_readings', type_='foreignkey')
    op.drop_column('sensor_readings', 'extra_data')
    op.drop_column('sensor_readings', 'is_processed')
    op.drop_column('sensor_readings', 'reading_quality')
    op.drop_column('sensor_readings', 'ph_level')
    op.drop_column('sensor_readings', 'soil_moisture')
    op.drop_column('sensor_readings', 'sensor_id')
    op.drop_table('sensor_alerts')
    op.drop_table('sensors')
    op.drop_table('sensor_zones')
    # ### end Alembic commands ###
